server_tokens off;
port_in_redirect off;

proxy_connect_timeout       600s;
proxy_send_timeout          600s;
proxy_read_timeout          600s;
send_timeout                600s;

upstream frontend {
    least_conn;
    server frontend:3000 max_fails=3 fail_timeout=60 weight=1;
}

upstream backend {
    least_conn;
    server backend:8000 max_fails=3 fail_timeout=60 weight=1;
}

server {
        listen 80 default_server;
        #server_name             _;
        index                   index index.html index.htm;
        return 301              https://$host$request_uri;
}

server {
	# listen 80 default_server;
   	listen                  443 ssl default_server;
    listen                  [::]:443 ssl default_server;
    ssl_certificate         /etc/ssl/1337.ma.crt;
    ssl_certificate_key     /etc/ssl/private/1337.ma.key;
    keepalive_timeout   70;
    client_max_body_size 20M;

	location / {
        add_header Pragma "no-cache";
        add_header Cache-Control "no-cache, must-revalidate";
		proxy_pass http://frontend;
    }
	location /api {
        try_files $uri @backend_proxy;
    }

	location /auth {
        try_files $uri @backend_proxy;
    }

	location /admin {
		try_files $uri @backend_proxy;
	}

	location /static/ {
		root /home/backend/;
	}

    location @backend_proxy {
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass_request_headers on;
        proxy_pass   http://backend;
    }
}